import{_ as n,c as s,o as a,d as t}from"./app.87eb6f1c.js";const _='{"title":"\u590D\u5236\u7C98\u8D34","description":"","frontmatter":{},"headers":[],"relativePath":"js/\u590D\u5236\u7C98\u8D34.md"}',p={},o=t(`<h1 id="\u590D\u5236\u7C98\u8D34" tabindex="-1">\u590D\u5236\u7C98\u8D34 <a class="header-anchor" href="#\u590D\u5236\u7C98\u8D34" aria-hidden="true">#</a></h1><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> exec <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;child_process&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> num <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">,</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">,</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">,</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;clip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;pbcopy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;xclip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre></div>`,2),e=[o];function c(u,l,i,k,r,g){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{_ as __pageData,f as default};
