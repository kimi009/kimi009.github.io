import{_ as s,c as n,o as a,d as t}from"./app.87eb6f1c.js";const y='{"title":"ts\u4E2Dextend\u5947\u6280\u6DEB\u5DE7","description":"","frontmatter":{},"headers":[],"relativePath":"ts/ts\u4E2Dextend\u5947\u6280\u6DEB\u5DE7.md"}',p={},o=t(`<h1 id="ts\u4E2Dextend\u5947\u6280\u6DEB\u5DE7" tabindex="-1">ts\u4E2Dextend\u5947\u6280\u6DEB\u5DE7 <a class="header-anchor" href="#ts\u4E2Dextend\u5947\u6280\u6DEB\u5DE7" aria-hidden="true">#</a></h1><p><a href="https://juejin.cn/post/7034133130433232903" target="_blank" rel="noopener noreferrer">extend\u597D\u6587\u7AE0</a></p><ul><li><p>\u7C7B\u578B\u6536\u7A84</p><p><strong>\u5173\u4E8E extends\uFF0C\u8FD9\u6D89\u53CA\u5230\u534F\u53D8\u4E0E\u9006\u53D8\u76F8\u5173\u7684\u90E8\u5206\uFF0C\u5728\u8FD9\u91CC\u4F60\u53EF\u4EE5\u7B80\u5355\u7406\u89E3\u4E3A\uFF0C\u5DE6\u8FB9\u7684\u7C7B\u578B\u66F4\u52A0\u72ED\u7A84\u5177\u4F53\uFF0C\u53F3\u8FB9\u7684\u7C7B\u578B\u66F4\u52A0\u5BBD\u677E\u5E7F\u6CDB\u65F6\uFF08\u5373\uFF0C\u53F3\u8FB9\u7C7B\u578B\u4E2D\u6709\u7684\u5728\u5DE6\u8FB9\u80AF\u5B9A\u6709\uFF01\uFF09\uFF0Cextends \u6210\u7ACB\uFF1A</strong></p></li></ul><div class="language-typescript"><pre><code><span class="token keyword">type</span> <span class="token class-name">Test</span> <span class="token operator">=</span> <span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> bar<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
  <span class="token operator">?</span> <span class="token string">&#39;TRUE&#39;</span>
  <span class="token operator">:</span> <span class="token string">&#39;FALSE&#39;</span>

<span class="token keyword">type</span> <span class="token class-name">Test1</span> <span class="token operator">=</span> <span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> bar<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span>
  <span class="token operator">?</span> <span class="token string">&#39;TRUE&#39;</span>
  <span class="token operator">:</span> <span class="token string">&#39;FALSE&#39;</span>

<span class="token keyword">let</span> m0<span class="token operator">:</span> Test <span class="token operator">=</span> <span class="token string">&#39;TRUE&#39;</span>
<span class="token keyword">let</span> m1<span class="token operator">:</span> Test1 <span class="token operator">=</span> <span class="token string">&#39;FALSE&#39;</span>

</code></pre></div><ul><li>\u7C7B\u578B\u5254\u9664\u5927\u6CD5</li></ul><div class="language-typescript"><pre><code><span class="token keyword">type</span> <span class="token class-name">cases</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  Expect<span class="token operator">&lt;</span>Equal<span class="token operator">&lt;</span>MyExclude<span class="token operator">&lt;</span><span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
  Expect<span class="token operator">&lt;</span>Equal<span class="token operator">&lt;</span>MyExclude<span class="token operator">&lt;</span><span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
  Expect<span class="token operator">&lt;</span>Equal<span class="token operator">&lt;</span>MyExclude<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
\u5B9E\u73B0Exclude
<span class="token comment">// type MyExclude&lt;T, U&gt; = Exclude&lt;T, U&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">MyExclude<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token constant">T</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">=</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span>
<span class="token keyword">const</span> m<span class="token operator">:</span> MyExclude<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span> <span class="token comment">//\u8FD9\u91CC\u7684m\u7C7B\u578B\u53EA\u80FD\u662Fa,\u4E0D\u80FD\u8D4B\u503Cc</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span>
<span class="token keyword">const</span> m<span class="token operator">:</span>MyExclude<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span><span class="token constant">U</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token string">&#39;c&#39;</span> <span class="token comment">//\u8FD9\u91CC\u7684m\u7C7B\u578B\u53EA\u80FD\u662F \u2018b&#39; | &#39;c&#39;</span>

\u603B\u7ED3\uFF1A <span class="token keyword">extends</span> <span class="token class-name">\u7528\u5728\u6761\u4EF6\u91CC\u9762\u5224\u65AD\u7684\u662F\u65F6\u5019\u662F\u5DE6\u8FB9\u7684\u6761\u4EF6\u9010\u4E2A\u53BB\u548C\u53F3\u8FB9\u5339\u914D</span>
	\u4E0A\u9762\u7684\u4F8B\u5B50\u4E5F\u5C31\u662F\u4ECE <span class="token constant">T</span>\u7C7B\u578B\u4E2D\u5254\u9664 <span class="token constant">U</span>\u4E2D\u7684\u6240\u6709\u7C7B\u578B\uFF0C\u8981\u9010\u4E2A\u5254\u9664

</code></pre></div>`,6),e=[o];function c(l,r,k,i,u,d){return a(),n("div",null,e)}var _=s(p,[["render",c]]);export{y as __pageData,_ as default};
